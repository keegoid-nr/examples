AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: And example of a simple instrumented NodeJS Lambda

Parameters:
  NRAccountId:
    Type: String
    Description: Your New Relic account ID; necessary for distributed tracing.
    AllowedPattern: '[0-9]+'
  NRTrustedAccountKey:
    Type: String
    Description: Your New Relic parent account ID or account ID if no parent; necessary for distributed tracing.
    AllowedPattern: '[0-9]+'
  SecretsManagerSecretName:
    Type: String
    Description: Your AWS Secrets Manager secret name which holds the New Relic ingest license key.
    AllowedPattern: '[0-9A-Z_-]+'

Resources:
  KmullaneyLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Tags:
        - Key: owner
          Value: kmullaney
        - Key: reason
          Value: testing
        - Key: description
          Value: "nodejs18 ESM manual handler wrapping for improved cold start performance"
      Policies:
        - PolicyName: LambdaSecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: GetSecretValue
                Effect: Allow
                Action: 'secretsmanager:GetSecretValue'
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SecretsManagerSecretName}-*'
              - Sid: CloudWatchLogsAccess
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
              - Sid: CloudWatchMetricsAccess
                Effect: Allow
                Action:
                  - 'cloudwatch:PutMetricData'
                Resource: '*'
                Condition:
                  StringEquals:
                    'cloudwatch:namespace':
                      - 'AWS/Lambda'

  KmullaneySamManualWrappingNodejs18x:
    Type: AWS::Serverless::Function
    Properties:
      # In this example, we're using the SAM CLI to package and deploy our lambda. SAM will transform this value during the publish step.
      CodeUri: src/
      Description: instrumentation with ESM bypassing dynamic wrapper for better performance
      FunctionName: kmullaney-sam-manual-wrapping-nodejs18x
      # If not using ESM, this should be newrelic-lambda-wrapper.handler provided by the instrumentation layer.
      # If using ESM, bypass newrelic-lambda-wrapper.handler to avoid RITM slow dependency loading by setting the actual function handler here.
      Handler: function.handler
      Runtime: nodejs18.x
      Role: !GetAtt KmullaneyLambdaExecutionRole.Arn
      MemorySize: 256
      Timeout: 20
      PackageType: Zip
      Environment:
        Variables:
          NEW_RELIC_ACCOUNT_ID: !Ref NRAccountId                       # New Relic account ID
          NEW_RELIC_TRUSTED_ACCOUNT_KEY: !Ref NRTrustedAccountKey      # New Relic account ID or parent ID
          NEW_RELIC_LICENSE_KEY_SECRET: !Ref SecretsManagerSecretName  # Secrets Manager secret name for the extension (can override with env var NEW_RELIC_LICENSE_KEY)
          NEW_RELIC_NO_CONFIG_FILE: true                               # Node agent uses environment variables in Lambda
          NEW_RELIC_APP_NAME: kmullaney-sam-manual-wrapping-nodejs18x  # Should be set but not used in the New Relic UI, entity names come from the AWS integration
          NEW_RELIC_EXTENSION_LOGS_ENABLED: true                       # Enable/disable NR_EXT log lines
          NEW_RELIC_EXTENSION_SEND_FUNCTION_LOGS: true                 # Send logs via [NR_EXT]
          NEW_RELIC_EXTENSION_LOG_LEVEL: DEBUG                         # Extension log level
          NEW_RELIC_DATA_COLLECTION_TIMEOUT: 1s                        # Reduce timeout duration when for "Telemetry client error"
          NEW_RELIC_LOG_ENABLED: true                                  # Agent logs
          NEW_RELIC_LOG: stdout                                        # Agent log path
          NEW_RELIC_LOG_LEVEL: trace                                   # Agent log level
          NEW_RELIC_USE_ESM: true                                      # Let the agent know the function uses ESM
      Layers:
        - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:451483290750:layer:NewRelicNodeJS18X:63
      # Policies:
      #   # This policy allows the lambda to know the value of the New Relic license key. We need this so
      #   # that we can send telemetry back to New Relic
      #   - AWSSecretsManagerGetSecretValuePolicy:
      #       SecretArn: !ImportValue NewRelicLicenseKeySecret-NewRelic-LicenseKeySecretARN
      Tags:
        owner: kmullaney
        reason: test manual wrapping
        description: "nodejs18 ESM manual handler wrapping for improved cold start performance"

  KmullaneyNodejs18LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${KmullaneySamManualWrappingNodejs18x}'
      RetentionInDays: 3
